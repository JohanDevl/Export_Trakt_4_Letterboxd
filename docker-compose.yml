services:
  # Base service configuration for PRODUCTION (pulls from registry)
  export-trakt-base: &export-trakt-base-prod
    image: ghcr.io/johandevl/export_trakt_4_letterboxd:latest
    pull_policy: always
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./exports:/app/exports
    restart: "no"
    environment:
      - TZ=Europe/Paris

  # Base service configuration for DEVELOPMENT/TEST (local build)
  export-trakt-base-dev: &export-trakt-base-dev
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: local-dev
        COMMIT_SHA: local
        BUILD_DATE: "2025-05-23T12:30:00Z"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./exports:/app/exports
    restart: "no"
    environment:
      - TZ=Europe/Paris

  # === PRODUCTION SERVICES (using registry image) ===

  # Persistent OAuth & Export Server (production) - RECOMMENDED
  export-trakt-server:
    <<: *export-trakt-base-prod
    profiles: ["server", "oauth", "prod"]
    container_name: export-trakt-server
    restart: unless-stopped
    ports:
      - "8089:8089"
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - TRAKT_CLIENT_ID=c479b2e7dc4fbec157d89cd4cba9cf88fc614de7ec17813fc9f5bac92e1c8786
      - TRAKT_CLIENT_SECRET=dc25b9c7cbe7346b9ff65d545ddbc8d1fe645268d42b6a105b3da249dc73fb2a
    command: ["server"]

  # Normal export (production)
  export-trakt:
    <<: *export-trakt-base-prod
    profiles: ["default", "export", "prod"]
    command: ["export", "--mode", "normal"]

  # Production scheduler - Every 6 hours (recommended)
  export-trakt-schedule-6h:
    <<: *export-trakt-base-prod
    profiles: ["schedule", "schedule-6h", "prod"]
    container_name: export-trakt-schedule-6h
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - EXPORT_QUIET_MODE=true
    command:
      ["--schedule", "0 */6 * * *", "--export", "all", "--mode", "complete"]

  # Production scheduler - Daily at 2:30 AM
  export-trakt-schedule-daily:
    <<: *export-trakt-base-prod
    profiles: ["schedule-daily", "prod"]
    container_name: export-trakt-schedule-daily
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - EXPORT_QUIET_MODE=true
    command:
      ["--schedule", "30 2 * * *", "--export", "all", "--mode", "complete"]

  # Production run once - all data
  export-trakt-run-all:
    <<: *export-trakt-base-prod
    profiles: ["run", "run-all", "prod"]
    command: ["--run", "--export", "all", "--mode", "complete"]

  # === DEVELOPMENT/TEST SERVICES (using local build) ===

  # Persistent OAuth & Export Server (development)
  export-trakt-server-dev:
    <<: *export-trakt-base-dev
    profiles: ["server", "oauth", "dev"]
    container_name: export-trakt-server-dev
    restart: unless-stopped
    ports:
      - "8089:8089"
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=debug
    command: ["server"]

  # OAuth Authentication (dev)
  export-trakt-auth-dev:
    <<: *export-trakt-base-dev
    profiles: ["auth", "dev"]
    ports:
      - "8089:8089"
    command: ["auth"]
    tty: true
    stdin_open: true

  # Interactive setup (dev)
  export-trakt-setup-dev:
    <<: *export-trakt-base-dev
    profiles: ["setup", "dev"]
    command: ["setup"]
    tty: true
    stdin_open: true

  # Test scheduler - High frequency (every 2 minutes) for testing
  export-trakt-schedule-test:
    <<: *export-trakt-base-dev
    profiles: ["schedule-test", "schedule-15min", "dev"]
    container_name: export-trakt-schedule-test
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - EXPORT_QUIET_MODE=true
    command:
      ["--schedule", "*/2 * * * *", "--export", "watched", "--mode", "normal"]

  # Test run once - watched movies only (dev)
  export-trakt-run-watched-dev:
    <<: *export-trakt-base-dev
    profiles: ["run-watched", "dev"]
    command: ["--run", "--export", "watched", "--mode", "normal"]

  # Test run once - all data (dev)
  export-trakt-run-all-dev:
    <<: *export-trakt-base-dev
    profiles: ["run-all", "dev"]
    command: ["--run", "--export", "all", "--mode", "complete"]

  # Validate configuration (dev)
  export-trakt-validate-dev:
    <<: *export-trakt-base-dev
    profiles: ["validate", "dev"]
    command: ["validate"]

  # === LEGACY SERVICES (for backward compatibility) ===

  # Complete export (legacy - production)
  export-trakt-complete:
    <<: *export-trakt-base-prod
    profiles: ["complete", "legacy"]
    command: ["export", "--mode", "complete", "--export", "all"]

  # Initial export (legacy - production)
  export-trakt-initial:
    <<: *export-trakt-base-prod
    profiles: ["initial", "legacy"]
    command: ["export", "--mode", "initial"]

  # Custom scheduled export (production)
  export-trakt-schedule-custom:
    <<: *export-trakt-base-prod
    profiles: ["schedule-custom", "prod"]
    container_name: export-trakt-schedule-custom
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - EXPORT_QUIET_MODE=true
      - CUSTOM_SCHEDULE=${SCHEDULE:-0 */6 * * *}
      - CUSTOM_EXPORT_TYPE=${EXPORT_TYPE:-all}
      - CUSTOM_EXPORT_MODE=${EXPORT_MODE:-complete}
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        /app/export-trakt --schedule "$${CUSTOM_SCHEDULE}" --export "$${CUSTOM_EXPORT_TYPE}" --mode "$${CUSTOM_EXPORT_MODE}"

# === USAGE EXAMPLES ===
#
# 🌟 RECOMMENDED: PERSISTENT SERVER WITH WEB INTERFACE
#
# 🚀 Production OAuth Server (with web interface):
# docker compose --profile server up -d
# Then visit: http://your-ip:8089 for web interface
# OAuth callback: http://your-ip:8089/callback
#
# 🛠️  Development OAuth Server (with web interface):
# docker compose --profile server --profile dev up -d --build
# Then visit: http://localhost:8089 for web interface
#
# 🔐 OAUTH AUTHENTICATION (Command Line):
#
# Interactive OAuth (development):
# docker compose --profile auth --profile dev up --build
#
# Generate OAuth URL only:
# docker run --rm -v "$(pwd)/config:/app/config" trakt-exporter auth-url
#
# 🚀 PRODUCTION MODE (pulls from GitHub Container Registry):
#
# Run production scheduler (every 6 hours):
# docker compose --profile schedule-6h up -d
#
# Run production daily scheduler (2:30 AM):
# docker compose --profile schedule-daily up -d
#
# Run once - all data (production):
# docker compose --profile run-all up
#
# Custom production schedule:
# SCHEDULE="0 */4 * * *" docker compose --profile schedule-custom up -d
#
# 🛠️  DEVELOPMENT/TEST MODE (builds locally):
#
# Test scheduler (every 2 minutes):
# docker compose --profile dev --profile schedule-test up -d --build
#
# Test run once - watched movies:
# docker compose --profile dev --profile run-watched up --build
#
# Test run once - all data:
# docker compose --profile dev --profile run-all up --build
#
# Interactive setup:
# docker compose --profile dev --profile setup up --build
#
# Validate configuration:
# docker compose --profile dev --profile validate up --build
#
# 🔄 SWITCHING MODES:
#
# Stop test scheduler and start production server:
# docker compose --profile dev --profile schedule-test down
# docker compose --profile server up -d
#
# Stop production and start development server:
# docker compose --profile server down
# docker compose --profile server --profile dev up -d --build
#
# 📊 MONITORING:
#
# Check server logs:
# docker compose --profile server logs -f
#
# Check production scheduler logs:
# docker compose --profile schedule-6h logs -f
#
# Check development logs:
# docker compose --profile dev --profile schedule-test logs -f
#
# 🎯 QUICK COMMANDS:
#
# Start OAuth server (RECOMMENDED):
# docker compose --profile server --profile dev up -d --build
#
# Test your changes:
# docker compose --profile dev --profile run-watched up --build
#
# Deploy to production:
# docker compose --profile server up -d
#
# Check status:
# docker compose ps
#
# 🌐 WEB INTERFACE ENDPOINTS (when server is running):
#
# Main dashboard: http://localhost:8089/
# OAuth authentication: http://localhost:8089/auth-url
# Token status: http://localhost:8089/status
# Export watched movies: http://localhost:8089/export/watched
# Export all data: http://localhost:8089/export/all
# Health check: http://localhost:8089/health

volumes:
  trakt_logs:
  trakt_copy:
  trakt_backup:
