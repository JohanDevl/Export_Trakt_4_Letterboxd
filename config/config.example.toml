# ═══════════════════════════════════════════════════════════════════════════════
#                            EXPORT TRAKT FOR LETTERBOXD
#                              Configuration Template
# ═══════════════════════════════════════════════════════════════════════════════
#
# 📋 Instructions:
#   1. Copy this file to 'config.toml'
#   2. Replace placeholder values with your actual credentials
#   3. Customize settings according to your preferences
#
# 🔗 Get API credentials: https://trakt.tv/oauth/applications
# 📖 Documentation: https://github.com/JohanDevl/Export_Trakt_4_Letterboxd
#
# ═══════════════════════════════════════════════════════════════════════════════

# Export Trakt 4 Letterboxd Configuration File
# This is an example configuration file with enhanced security features

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                           🔑 TRAKT.TV API SETTINGS                         │
# └─────────────────────────────────────────────────────────────────────────────┘
[trakt]
# Trakt.tv API configuration
# Note: With OAuth enabled, only client_id and client_secret are required
client_id = "your_trakt_client_id"           # Required for OAuth flow
client_secret = "your_trakt_client_secret"   # Required for OAuth flow
access_token = ""                            # Legacy: Optional, will be obtained automatically via OAuth
api_base_url = "https://api.trakt.tv"        # HTTPS enforced when security.require_https = true

# 📊 Data detail level for exports
# Options: "min" | "full" | "metadata" | "letterboxd"
# 💡 Use "letterboxd" for optimal Letterboxd import compatibility
extended_info = "full"

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                        📽️  LETTERBOXD EXPORT SETTINGS                     │
# └─────────────────────────────────────────────────────────────────────────────┘
[letterboxd]
# Letterboxd export configuration
export_dir = "./exports"
watched_filename = "watched.csv"
collection_filename = "watchlist.csv"
shows_filename = "shows.csv"
ratings_filename = "ratings.csv"
watchlist_filename = "watchlist.csv"
letterboxd_import_filename = "letterboxd_import.csv"

# 📄 Custom filenames (optional - uncomment to use)
# watched_filename = "watched.csv"
# collection_filename = "collection.csv"
# shows_filename = "shows.csv"

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                          ⚙️  GENERAL EXPORT SETTINGS                      │
# └─────────────────────────────────────────────────────────────────────────────┘
[export]
# Export format settings
format = "csv"

# 📅 Date format in exports (Go time layout)
# Examples: "2006-01-02" → 2024-05-23 | "02/01/2006" → 23/05/2024
date_format = "2006-01-02"

# 🌍 Timezone for export timestamps
# Examples: "Europe/Paris", "America/New_York", "Asia/Tokyo"
# 💡 Leave empty "" to use UTC
timezone = "UTC"

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                            📝 LOGGING CONFIGURATION                        │
# └─────────────────────────────────────────────────────────────────────────────┘
[logging]
# Application logging configuration
level = "info"                    # debug, info, warn, error, fatal
format = "visual"                 # visual, json, text
output = "stdout"                 # stdout, stderr, file
rotation_enabled = false          # Enable log rotation
max_age_days = 30                # Maximum age of log files in days
max_size_mb = 100                # Maximum size of log files in MB
max_backups = 3                  # Maximum number of backup files
correlation_id = true            # Enable correlation IDs for request tracing

# 📄 Log file location (when output = "file")
file = "./logs/app.log"

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                        📊 MONITORING AND OBSERVABILITY                     │
# └─────────────────────────────────────────────────────────────────────────────┘
[monitoring]
# Enable monitoring and observability features
enabled = true
metrics_enabled = true            # Enable Prometheus metrics
tracing_enabled = true            # Enable OpenTelemetry tracing
health_checks_enabled = true      # Enable health check endpoints
metrics_port = 9090              # Port for metrics and health endpoints
metrics_path = "/metrics"        # Path for Prometheus metrics

# Tracing configuration (OpenTelemetry)
[tracing]
enabled = true
service_name = "export-trakt-letterboxd"
service_version = "1.0.0"
environment = "production"       # production, staging, development
jaeger_endpoint = "http://localhost:14268/api/traces"  # Optional Jaeger endpoint
sampling_rate = 0.1             # Sampling rate (0.0 to 1.0, 0.1 = 10% of traces)

# Alerting configuration
[alerts]
webhook_url = ""                 # Optional webhook URL for alerts
email_enabled = false            # Enable email alerts
slack_enabled = false            # Enable Slack alerts
rate_limit_minutes = 5          # Rate limit for alerts (prevent spam)

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                      🌐 INTERNATIONALIZATION SETTINGS                     │
# └─────────────────────────────────────────────────────────────────────────────┘
[i18n]
# Internationalization settings
default_language = "en"

# 🌏 Current language setting
# Available: "en", "fr", "de", "es" (check locales/ directory)
language = "en"

# 📁 Directory containing translation files
locales_dir = "./locales"

# 🔒 Enhanced Security Configuration
[security]
# Enable encryption for sensitive data storage
encryption_enabled = true

# Keyring backend for credential storage
# Options: "system" (OS keychain), "env" (environment variables), "file" (encrypted file)
keyring_backend = "system"

# Enable comprehensive audit logging
audit_logging = true

# Enable rate limiting for API calls
rate_limit_enabled = true

# Require HTTPS for all external communications
require_https = true

# Audit logging configuration
[security.audit]
# Audit log level: debug, info, warn, error
log_level = "info"

# Number of days to retain audit logs
retention_days = 90

# Include sensitive information in audit logs (NOT recommended for production)
include_sensitive = false

# Audit log output format: json, text
output_format = "json"

# 📝 Security Configuration Guidelines
#
# 1. Credential Management:
#    - Use "system" keyring backend for maximum security on desktop systems
#    - Use "env" backend for containerized deployments
#    - Use "file" backend only for testing (less secure)
#    - Never store credentials in plain text configuration files
#
# 2. Environment Variables (when using keyring_backend = "env"):
#    - TRAKT_CLIENT_ID: Your Trakt.tv API client ID
#    - TRAKT_CLIENT_SECRET: Your Trakt.tv API client secret
#    - TRAKT_ACCESS_TOKEN: Your Trakt.tv access token (optional)
#    - ENCRYPTION_KEY: Base64-encoded 32-byte encryption key (auto-generated if not provided)
#
# 3. File Permissions:
#    - Ensure config files have restrictive permissions (0600)
#    - Audit logs are created with secure permissions (0640)
#    - Encrypted credential files use 0600 permissions
#
# 4. Security Levels:
#    - High: encryption_enabled=true, audit_logging=true, require_https=true, keyring_backend="system"
#    - Medium: encryption_enabled=true, require_https=true
#    - Low: Basic configuration without enhanced security features
#
# 5. Production Recommendations:
#    - Always enable encryption_enabled = true
#    - Set audit_logging = true for compliance
#    - Use require_https = true for secure communications
#    - Set include_sensitive = false in audit logs
#    - Regularly review and rotate credentials
#    - Monitor audit logs for security events
#
# 6. Docker Deployment:
#    - Use environment variables for credentials
#    - Mount logs directory as volume for persistence
#    - Run container as non-root user
#    - Use secrets management for production deployments
#
# Example environment variable configuration:
# TRAKT_CLIENT_ID=your_client_id_here
# TRAKT_CLIENT_SECRET=your_client_secret_here
# ENCRYPTION_KEY=base64_encoded_32_byte_key_here

# ┌─────────────────────────────────────────────────────────────────────────────┐
# │                        🔐 OAUTH AUTHENTICATION SETTINGS                   │
# └─────────────────────────────────────────────────────────────────────────────┘
[auth]
# OAuth 2.0 authentication configuration
use_oauth = true                              # Enable OAuth authentication (recommended)
auto_refresh = true                           # Automatically refresh expired tokens

# OAuth callback configuration
redirect_uri = "http://localhost:8080/callback"  # Must match your Trakt.tv app settings
callback_port = 8080                             # Port for local callback server

# 🚀 Quick Start with OAuth:
# 1. Configure your Trakt.tv app with the redirect_uri above
# 2. Run: docker exec -it <container> /app/export-trakt auth
# 3. Follow the interactive authentication flow
# 4. Tokens will be automatically managed and refreshed

# 💡 OAuth Commands:
# - auth            : Interactive OAuth authentication
# - token-status    : Check current token status
# - token-refresh   : Manually refresh access token
# - token-clear     : Clear all stored tokens

# ═══════════════════════════════════════════════════════════════════════════════
#                                    📚 NOTES
# ═══════════════════════════════════════════════════════════════════════════════
#
# 🔐 Security: Never commit config.toml with real credentials to version control
# 📖 For more options, check the project documentation
# 🐛 Issues? Report them at: https://github.com/JohanDevl/Export_Trakt_4_Letterboxd/issues
#
# ═══════════════════════════════════════════════════════════════════════════════ 