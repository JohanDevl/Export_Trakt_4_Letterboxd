name: Docker Cleanup

on:
  pull_request:
    types: [closed]
    branches: ["main", "develop"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  cleanup:
    name: Cleanup PR Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Delete PR Docker image
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            const tag = `PR-${pr_number}`;
            const image = `${process.env.REGISTRY}/${process.env.IMAGE_NAME}`;

            console.log(`Attempting to delete Docker image: ${image}:${tag}`);

            try {
              // Get package version ID for the PR tag
              const { data: versions } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByAuthenticatedUser({
                package_type: 'container',
                package_name: process.env.IMAGE_NAME.toLowerCase(),
              });
              
              const versionToDelete = versions.find(version => 
                version.metadata.container.tags.includes(tag)
              );
              
              if (versionToDelete) {
                console.log(`Found version: ${versionToDelete.id} with tag ${tag}`);
                
                await github.rest.packages.deletePackageVersionForAuthenticatedUser({
                  package_type: 'container',
                  package_name: process.env.IMAGE_NAME.toLowerCase(),
                  package_version_id: versionToDelete.id
                });
                
                console.log(`Successfully deleted image: ${image}:${tag}`);
              } else {
                console.log(`No image found with tag: ${tag}`);
              }
            } catch (error) {
              console.log(`Error deleting image: ${error.message}`);
            }

      - name: Summary
        run: |
          echo "ðŸ§¹ Cleanup completed for PR-${{ github.event.pull_request.number }} Docker image"
